/* nejsme vcerejsi, pouzivame moderni box model */
html { box-sizing: border-box; }
*, :after, :before { box-sizing: inherit; }

body {
	margin: 0;
	padding: 30px;
	font-family:  'Alice', serif;
	font-size: 18px;
	line-height: 1.5;
}

h1, h2, h3 {
	font-family: 'Kaushan Script', cursive;
	font-weight: normal;
	margin: 0;
}

blockquote {
	font-family: 'Kaushan Script', cursive;
}

/* --------------------------------------------------- */

/* barvy */
:root {
	--svetla: #edf3f5;
	--seda: #b2bec3;
	--tmava: #636e72;
	--oranzova: #ee5a24;
	--cervena: #ea2027;
	--zluta: #f79f1f;
	--zelena: #a3cb38;
	--limetka: #c4e538;
}

/*
	Všimni si, jak jsou zde nadefinované barvy.
	Potřebný kód barvy si odtamtud můžeš zkopírovat a použít
	ve svém kódu, ale existuje i lepší způsob.

  CSS custom properties, někdy také označované jako CSS
	variables (CSS proměnné), je způsob, jak si	pojmenovat
	nějakou hodnotu a potom ji v kódu opakovaně používat.
	Často se používá právě pro barvy, rozměry a další "nastavení".

	Když si chci nějakou hodnotu nadefinovat, použiji zápis:
	--mujnazev: hodnota;

	Když chci, abych mohl takovou hodnotu používat kdekoliv v CSS,
	založím ji uvnitř selektoru :root, takže např.:
	:root {
		--mojebarva: #ff8800;
	}

	Chci-li potom v CSS hodnotu použít, stačí použít funkci var
	a do závorek uvést název proměnné. Např.:
	.odstavec {
		color: var(--mojebarva);
	}

	Nemusím si tak pamatovat kódy barev nebo neustále v CSS jezdit nahoru a dolů, abych si je odněkud zkopíroval.

	Více o CSS custom properties:
	- https://www.w3schools.com/css/css3_variables.asp
	- https://css-tricks.com/patterns-for-practical-css-custom-properties-use/
	- https://www.smashingmagazine.com/2017/04/start-using-css-custom-properties/
*/
article{
	display: grid;
	grid-template-columns: [page-start] 1fr [content-start] 4fr [content-end] 2fr [page-end];
	column-gap: 40px;
	align-items: start;
}
header{
	grid-column-start: content-start;
}
p{
	grid-column: content-start / content-end;
	margin: 0px 0px 20px 0px;
}
h2{
	grid-column: content-start / content-end;
	font-size: 60px;
	color: var(--zelena);
	margin: 20px 0px;
}
figure, blockquote{
	grid-column: span 3;
	margin: 20px 0px;
}
.tip-vlevo{
	grid-column-start: page-start;
	background-color: var(--svetla);
	color: var(--tmava);
	border-right: 2px solid var(--zluta);
	padding: 20px;
	text-align: end;
	font-size: 16px;
	height: fit-content;
	margin: 0;
}
.tip-vpravo{
	grid-column: content-end;
	background-color: var(--svetla);
	color: var(--tmava);
	border-left: 2px solid var(--zluta);
	padding: 20px;
	text-align: start;
	font-size: 16px;
	height: fit-content;
	margin: 0;
}

img{
	width: 100%;
	
}
figcaption{
	color: #b2bec3;
}
blockquote::before{
	content: "";
	display: block;
	background-color: #c4e538;
	height: 3px;
	width: 150px;
	margin: 30px auto;
}
blockquote{
	text-align: center;
	font-size: 40px;
	color: var(--seda);
}
blockquote::after{
	content: " ";
	display: block;
	background-color: #c4e538;
	height: 3px;
	width: 150px;
	margin: 30px auto;
}
h1{
	font-size: 90px;
	color: var(--zelena);
	margin: 40px 0px;
}
.meta{
	color: var(--seda);
	font-size: 15px;
}
.tip a{
	color: var(--oranzova);
}
.tip p{
	margin: 0;
}
footer{
	grid-column-start: content-start;
	color: #b2bec3;
	margin-top: 40px;
}
footer a{
	color: #b2bec3;
	
}